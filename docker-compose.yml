version: "3.8"

services:
  # Django Journal App
  db:
    image: postgres:15
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_DB: ${DB_NAME}
    container_name: journal_postgres_db
    restart: unless-stopped
  
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - app_network
  web:
    build: .
    container_name: django_journal_app
    environment:
      DB_HOST: db
      DB_PORT: 5432
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
    volumes:
      - .:/app
    ports:
      - "8080:8080"
  
    depends_on:
      - db
    networks:
      - app_network
    command: >
      bash -c "./scripts/wait-for-it.sh ${DB_HOST}:${DB_PORT} --timeout=30 --strict &&
      python manage.py migrate && 
      python manage.py shell -c \"import os;
      from django.contrib.auth.models import User;
      django_admin_user = os.environ.get('DJANGO_ADMIN_USER');
      django_admin_email = os.environ.get('DJANGO_ADMIN_EMAIL');
      django_admin_password = os.environ.get('DJANGO_ADMIN_PASSWORD');

      User.objects.filter(username='admin').exists() or User.objects.create_superuser(django_admin_user, django_admin_email, django_admin_password)\" && 
      gunicorn mysite.wsgi:application --bind 0.0.0.0:8080"


volumes:
  postgres_data:

networks:
  app_network:
    driver: bridge